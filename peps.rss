<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>Newest Python PEPs</title>
    <link>https://peps.python.org/peps.rss</link>
    <description>Newest Python Enhancement Proposals (PEPs): Information on new language features and some meta-information like release procedure and schedules.</description>
    <atom:link href="https://peps.python.org/peps.rss" rel="self"/>
    <docs>https://cyber.harvard.edu/rss/rss.html</docs>
    <language>en</language>
    <lastBuildDate>Sun, 09 Jun 2024 11:54:11 GMT</lastBuildDate>
    <item>
      <title>PEP 749: Implementing PEP 649</title>
      <link>https://peps.python.org/pep-0749/</link>
      <description>This PEP supplements PEP 649 by providing various tweaks and additions to its specification:</description>
      <author>Jelle Zijlstra (jelle.zijlstra@gmail.com)</author>
      <guid isPermaLink="true">https://peps.python.org/pep-0749/</guid>
      <pubDate>Tue, 28 May 2024 00:00:00 GMT</pubDate>
    </item>
    <item>
      <title>PEP 746: Type checking Annotated metadata</title>
      <link>https://peps.python.org/pep-0746/</link>
      <description>This PEP proposes a mechanism for type checking metadata that uses the typing.Annotated type. Metadata objects that implement the new __supports_type__ protocol will be type checked by static type checkers to ensure that the metadata is valid for the given type.</description>
      <author>Adrian Garcia Badaracco (adrian@adriangb.com)</author>
      <guid isPermaLink="true">https://peps.python.org/pep-0746/</guid>
      <pubDate>Mon, 20 May 2024 00:00:00 GMT</pubDate>
    </item>
    <item>
      <title>PEP 789: Preventing task-cancellation bugs by limiting yield in async generators</title>
      <link>https://peps.python.org/pep-0789/</link>
      <description>Structured concurrency is increasingly popular in Python.  Interfaces such as the asyncio.TaskGroup and asyncio.timeout context managers support compositional reasoning, and allow developers to clearly scope the lifetimes of concurrent tasks. However, using yield to suspend a frame inside such a context leads to situations where the wrong task is canceled, timeouts are ignored, and exceptions are mishandled. More fundamentally, suspending a frame inside a TaskGroup violates the structured concurrency design principle that child tasks are encapsulated within their parent frame.</description>
      <author>Zac Hatfield-Dodds (zac@zhd.dev), Nathaniel J. Smith (njs@pobox.com)</author>
      <guid isPermaLink="true">https://peps.python.org/pep-0789/</guid>
      <pubDate>Tue, 14 May 2024 00:00:00 GMT</pubDate>
    </item>
    <item>
      <title>PEP 745: Python 3.14 Release Schedule</title>
      <link>https://peps.python.org/pep-0745/</link>
      <description>This document describes the development and release schedule for Python 3.14.</description>
      <author>Hugo van Kemenade</author>
      <guid isPermaLink="true">https://peps.python.org/pep-0745/</guid>
      <pubDate>Wed, 24 Apr 2024 00:00:00 GMT</pubDate>
    </item>
    <item>
      <title>PEP 744: JIT Compilation</title>
      <link>https://peps.python.org/pep-0744/</link>
      <description>Earlier this year, an experimental “just-in-time” compiler was merged into CPython’s main development branch. While recent CPython releases have included other substantial internal changes, this addition represents a particularly significant departure from the way CPython has traditionally executed Python code. As such, it deserves wider discussion.</description>
      <author>Brandt Bucher (brandt@python.org)</author>
      <guid isPermaLink="true">https://peps.python.org/pep-0744/</guid>
      <pubDate>Thu, 11 Apr 2024 00:00:00 GMT</pubDate>
    </item>
    <item>
      <title>PEP 743: Add Py_COMPAT_API_VERSION to the Python C API</title>
      <link>https://peps.python.org/pep-0743/</link>
      <description>Add Py_COMPAT_API_VERSION and Py_COMPAT_API_VERSION_MAX macros to opt-in for planned incompatible C API changes in a C extension. Maintainers can decide when they make their C extension compatible and also decide which future Python version they want to be compatible with.</description>
      <author>Victor Stinner (vstinner@python.org)</author>
      <guid isPermaLink="true">https://peps.python.org/pep-0743/</guid>
      <pubDate>Mon, 11 Mar 2024 00:00:00 GMT</pubDate>
    </item>
    <item>
      <title>PEP 742: Narrowing types with TypeIs</title>
      <link>https://peps.python.org/pep-0742/</link>
      <description>This PEP proposes a new special form, TypeIs, to allow annotating functions that can be used to narrow the type of a value, similar to the builtin isinstance(). Unlike the existing typing.TypeGuard special form, TypeIs can narrow the type in both the if and else branches of a conditional.</description>
      <author>Jelle Zijlstra (jelle.zijlstra@gmail.com)</author>
      <guid isPermaLink="true">https://peps.python.org/pep-0742/</guid>
      <pubDate>Wed, 07 Feb 2024 00:00:00 GMT</pubDate>
    </item>
    <item>
      <title>PEP 741: Python Configuration C API</title>
      <link>https://peps.python.org/pep-0741/</link>
      <description>Add a C API to configure the Python initialization without relying on C structures and the ability to make ABI-compatible changes in the future.</description>
      <author>Victor Stinner (vstinner@python.org)</author>
      <guid isPermaLink="true">https://peps.python.org/pep-0741/</guid>
      <pubDate>Thu, 18 Jan 2024 00:00:00 GMT</pubDate>
    </item>
    <item>
      <title>PEP 740: Index support for digital attestations</title>
      <link>https://peps.python.org/pep-0740/</link>
      <description>This PEP proposes a collection of changes related to the upload and distribution of digitally signed attestations and metadata used to verify them on a Python package repository, such as PyPI.</description>
      <author>William Woodruff (william@yossarian.net), Facundo Tuesca (facundo.tuesca@trailofbits.com), Dustin Ingram (di@python.org)</author>
      <guid isPermaLink="true">https://peps.python.org/pep-0740/</guid>
      <pubDate>Mon, 08 Jan 2024 00:00:00 GMT</pubDate>
    </item>
    <item>
      <title>PEP 739: Static description file for build details of Python installations</title>
      <link>https://peps.python.org/pep-0739/</link>
      <description>Introduce a standard format for a static description file with build details of Python installations.</description>
      <author>Filipe Laíns (lains@riseup.net)</author>
      <guid isPermaLink="true">https://peps.python.org/pep-0739/</guid>
      <pubDate>Tue, 19 Dec 2023 00:00:00 GMT</pubDate>
    </item>
  </channel>
</rss>
